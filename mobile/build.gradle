apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

apply from: "$project.rootDir/tools/script-git-version.gradle"
apply from: "$project.rootDir/tools/script-findbugs.gradle"
apply from: "$project.rootDir/tools/script-lint.gradle"
apply from: "$project.rootDir/tools/script-pmd.gradle"
apply from: "$project.rootDir/tools/script-java-code-coverage.gradle"

def debugPropertiesFile = rootProject.file("keystore/debugkeystore.properties")
def debugProperties = new Properties()
debugProperties.load(new FileInputStream(debugPropertiesFile))

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.enfle.android.mediacontent"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 2
        versionName "1.2"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "API_KEY", "\"${API_KEY}\""
    }

    signingConfigs {
        debug {
            keyAlias debugProperties['keyAlias']
            keyPassword debugProperties['keyPassword']
            storeFile file(debugProperties['storeFile'])
            storePassword debugProperties['storePassword']
        }
        release {
            keyAlias debugProperties['keyAlias']
            keyPassword debugProperties['keyPassword']
            storeFile file(debugProperties['storeFile'])
            storePassword debugProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "$project.rootDir/tools/rules-proguard.pro"
        }
    }

    flavorDimensions("app")
    productFlavors {
        dev {
            // signingConfig signingConfigs.debug
            versionCode gitVersionCodeTime
            versionName gitVersionName
            applicationId "com.enfle.android.mediacontent.dev"
            dimension "app"
        }

        prod {
            //signingConfig signingConfigs.release
            versionCode gitVersionCode
            versionName gitVersionName
            applicationId "com.enfle.android.mediacontent"
            dimension "app"
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    lintOptions {
        abortOnError true
        disable 'InvalidPackage'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile files('libs/YouTubeAndroidPlayerApi.jar')

    // App's dependencies
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support:palette-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"

    // Firebase
    compile 'com.google.firebase:firebase-core:11.8.0'

    //butter knife
    compile 'com.jakewharton.timber:timber:4.5.1'
    compile "com.jakewharton:butterknife:$rootProject.butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknife"

    //retrofit
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofit"
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile 'com.squareup.picasso:picasso:2.5.2'

    //Okhtp
    compile "com.squareup.okhttp3:okhttp:$rootProject.okhttp"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp"

    // Dagger dependencies
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    compile "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    compile "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }

    compile 'org.parceler:parceler-api:1.1.5'
    annotationProcessor 'org.parceler:parceler:1.1.5'

    compile 'io.reactivex.rxjava2:rxjava:2.1.5'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
}

apply plugin: 'com.google.gms.google-services'